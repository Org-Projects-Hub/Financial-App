{"version":3,"sources":["components/classes/StudentAddClass.tsx","components/classes/StudentDashboard.tsx"],"names":["StudentAddClass","_ref","setMyClass","_useState","useState","_useState2","Object","slicedToArray","showConfirmation","setShowConfirmation","_useState3","_useState4","disabled","setDisabled","_useState5","_useState6","code","setCode","_useState7","_useState8","classDetails","setClassDetails","useEffect","length","react_default","a","createElement","Fragment","className","style","margin","width","marginTop","type","onChange","e","value","target","onClick","api","getClassDetailsbyAuth","then","res","success","classInfo","window","alert","catch","err","Modal","header","body","fontSize","name","date","createdBy","organization","actions","minWidth","marginRight","getStudentAuthorized","close","StudentDashboard","props","myClass","loading","setLoading","getStudentClass","Date","toLocaleString","confirm","handleError","leaveClass","classes_StudentAddClass"],"mappings":"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","file":"static/js/15.86864d7f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../../api';\nimport { CustomModal } from '../shared-components/Modal';\nimport useNonInitialEffect from '../../utils/useNonInitialEffect';\nimport { classType } from './StudentDashboard';\nimport useStateCallback from '../../utils/useStateCallback';\n\nconst StudentAddClass = ({ setMyClass }: { setMyClass: any }) => {\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [code, setCode] = useState('');\n  const [classDetails, setClassDetails] = useState<classType | null>(null);\n\n  /**\n   * Makes sure that user can only submit an authcode of lemgth 5\n   */\n  useEffect(() => {\n    if (code.length != 5) {\n      setDisabled(true);\n    } else {\n      setDisabled(false);\n    }\n  }, [code]);\n\n  /**\n   * Doesn't let the length of authCode be more than 5\n   * @param e Change event of the authCode input\n   */\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let value = e.target.value;\n\n    if (value.length > 5) {\n      return;\n    } else {\n      setCode(value);\n    }\n  };\n\n  /**\n   * Body of the Cofirmation modal\n   */\n  const modalBody = () => {\n    return (\n      <div>\n        <div className=\"bold-font bold\" style={{ fontSize: '1.5em' }}>\n          {classDetails.name}\n        </div>\n        <div className=\"creation-date meta-txt\">\n          Created on: {classDetails.date}\n        </div>\n        <div>Teacher: {classDetails.createdBy}</div>\n        <div>Organization: {classDetails.organization}</div>\n      </div>\n    );\n  };\n\n  const registerToClass = () => {\n    api\n      .getStudentAuthorized(code)\n      .then((res) => {\n        if (res.success) setMyClass(classDetails);\n        else {\n          setMyClass(null);\n        }\n      })\n      .catch((err) => {\n        window.alert('Something went wrong \\nPlease try again!');\n        setMyClass(null);\n      });\n  };\n\n  /**\n   * Actions of the confirmation modal\n   */\n  const ModalActions = () => {\n    return (\n      <div>\n        <button\n          className=\"yellow-button\"\n          style={{ minWidth: '10%', marginRight: '1%' }}\n          onClick={() => {\n            registerToClass();\n            setShowConfirmation(false);\n          }}\n        >\n          Yes\n        </button>\n        <button\n          className=\"blue-button\"\n          style={{ minWidth: '10%', marginRight: '1%' }}\n          onClick={() => {\n            setShowConfirmation(false);\n            setClassDetails(null);\n          }}\n        >\n          No\n        </button>\n      </div>\n    );\n  };\n\n  /**\n   * Makes an api call to get class details based on authCode provided\n   */\n  const handleSubmit = () => {\n    api\n      .getClassDetailsbyAuth(code)\n      .then((res) => {\n        if (res.success) {\n          setClassDetails(res.classInfo);\n          setShowConfirmation(true);\n        } else\n          window.alert(\n            'Invalid authentication code! \\n Please enter a valid code.'\n          );\n      })\n      .catch((err) => {\n        setClassDetails(null);\n        window.alert(\n          'Something went wrong! \\nPlease refresh the page and try again'\n        );\n      });\n  };\n\n  return (\n    <>\n      <div\n        className=\"generic-card\"\n        style={{ margin: 'auto', width: '65vw', marginTop: '15%' }}\n      >\n        <div className=\"general-heading\">Join A Class</div>\n        <div className=\"ta-center\">\n          Enter the 5 digit code provided by your instructor to join a class\n        </div>\n        <div className=\"ta-center\" style={{ margin: '1% 0' }}>\n          <input\n            className=\"ta-center\"\n            type=\"text\"\n            style={{ width: '60%' }}\n            onChange={handleChange}\n            value={code}\n          />\n        </div>\n        <button\n          className=\"yellow-button center\"\n          disabled={disabled}\n          onClick={handleSubmit}\n        >\n          Submit\n        </button>\n      </div>\n      {showConfirmation ? (\n        <CustomModal\n          header={'Is this your class?'}\n          body={modalBody}\n          actions={ModalActions}\n          close={() => setShowConfirmation(false)}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default StudentAddClass;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport api from '../../api';\nimport StudentAddClass from './StudentAddClass';\n\nexport interface classType {\n  name: String;\n  date: Date;\n  createdBy: String;\n  organization: String;\n}\n\nconst StudentDashboard = (props: any) => {\n  const [myClass, setMyClass] = useState<classType | null>(null);\n  const [loading, setLoading] = useState<Boolean>(true);\n\n  useEffect(() => {\n    api\n      .getStudentClass()\n      .then((res) => {\n        if (res.success) {\n          setMyClass(res.classDetails);\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        window.alert(\n          'Something went wrong \\nPlease refresh the page and try again!'\n        );\n      });\n  }, []);\n\n  const leaveClass = () => {\n    let confirm = window.confirm('Are you sure you want to leave this class?');\n    if (confirm) {\n      let handleError = () => {\n        window.alert(\n          'Something went wrong! \\nPlease refresh the page and try again.'\n        );\n      };\n\n      api\n        .leaveClass()\n        .then((res) => {\n          if (!res.success) handleError();\n          else {\n            setMyClass(null);\n          }\n        })\n        .catch((err) => {\n          handleError();\n        });\n    }\n  };\n\n  return (\n    <>\n      {!loading ? (\n        <>\n          {!myClass ? (\n            <StudentAddClass setMyClass={setMyClass} />\n          ) : (\n            <div\n              className=\"generic-card\"\n              style={{\n                minWidth: '40vw',\n                margin: 'auto',\n                marginTop: '15vh',\n              }}\n            >\n              <div className=\"ta-center general-heading\">Your Class</div>\n              <hr />\n              <br />\n              <div className=\"bold-font bold\" style={{ fontSize: '1.5em' }}>\n                {myClass.name}\n              </div>\n              <div className=\"creation-date meta-txt\">\n                Created on: {new Date(myClass.date).toLocaleString()}\n              </div>\n              <div>Teacher: {myClass.createdBy}</div>\n              <div>Organization: {myClass.organization}</div>\n\n              <div\n                className=\"red-button\"\n                onClick={leaveClass}\n                style={{ marginTop: '2%' }}\n              >\n                Leave\n              </div>\n            </div>\n          )}\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default StudentDashboard;\n"],"sourceRoot":""}