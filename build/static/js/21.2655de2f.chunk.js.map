{"version":3,"sources":["pages/Setting.tsx"],"names":["Setting","_ref","logout","user","getUserInfo","updatableFields","name","value","firstName","field","lastName","phone","notUpdatableFields","username","email","_React$useState","React","useState","_React$useState2","Object","_mnt_c_Users_ashis_Financial_App_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","_React$useState3","_React$useState4","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_style_styled__WEBPACK_IMPORTED_MODULE_2__","className","backgroundImg","style","marginTop","padding","fontSize","fontWeight","color","cols","margin","map","data","i","_components__WEBPACK_IMPORTED_MODULE_3__","assign","userEmail","updatable","key","onClick"],"mappings":"sJA6EeA,UAxEC,SAAAC,GAQG,IAPjBC,EAOiBD,EAPjBC,OACAC,EAMiBF,EANjBE,KACAC,EAKiBH,EALjBG,YAMMC,EAAkB,CACtB,CAAEC,KAAM,aAAcC,MAAOJ,EAAKK,UAAWC,MAAO,aACpD,CAAEH,KAAM,YAAaC,MAAOJ,EAAKO,SAAUD,MAAO,YAClD,CAAEH,KAAM,QAASC,MAAOJ,EAAKQ,MAAOF,MAAO,UAGvCG,EAAqB,CACzB,CAAEN,KAAM,WAAYC,MAAOJ,EAAKU,SAAUJ,MAAO,YACjD,CAAEH,KAAM,QAASC,MAAOJ,EAAKW,MAAOL,MAAO,UAT5BM,EAYSC,IAAMC,UAAS,GAZxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAAM,GAAAH,EAAA,GAAAA,EAAA,GAaOF,IAAMC,UAAS,IAbtBK,EAAAH,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAejB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,UAAU,cAAcC,cAAeA,KAC9CL,EAAAC,EAAAC,cAAA,OACEE,UAAU,qCACVE,MAAO,CACLC,UAAW,KACXC,QAAS,iBACTC,SAAU,UACVC,WAAY,IACZC,MAAO,SAGTX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMS,KAAK,KACTZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBE,MAAO,CAAEO,OAAQ,OAAnD,aAID/B,EAAgBgC,IAAI,SAACC,EAAMC,GAAP,OACnBhB,EAAAC,EAAAC,cAACe,EAAA,EAADrB,OAAAsB,OAAA,CACErC,YAAaA,EACbsC,UAAWvC,EAAKW,OACZwB,EAHN,CAIEK,WAAW,EACXC,IAAKL,OAGR3B,EAAmByB,IAAI,SAACC,EAAMC,GAAP,OACtBhB,EAAAC,EAAAC,cAACe,EAAA,EAADrB,OAAAsB,OAAA,CACErC,YAAaA,GACTkC,EAFN,CAGEK,WAAW,EACXC,IAAKL,OAKThB,EAAAC,EAAAC,cAAA,OACEE,UAAU,gBACVE,MAAO,CAAEO,OAAQ,WACjBS,QAAS,WACP3C,MAJJ","file":"static/js/21.2655de2f.chunk.js","sourcesContent":["import React from 'react';\nimport { Wrapper, Grid } from '../style/styled';\nimport { SettingItem } from '../components';\nimport { settings_background as backgroundImg } from 'assets';\n\nconst Setting = ({\n  logout,\n  user,\n  getUserInfo,\n}: {\n  logout: any;\n  user: any;\n  getUserInfo: any;\n}): JSX.Element => {\n  const updatableFields = [\n    { name: 'First Name', value: user.firstName, field: 'firstName' },\n    { name: 'Last Name', value: user.lastName, field: 'lastName' },\n    { name: 'Phone', value: user.phone, field: 'phone' },\n  ];\n\n  const notUpdatableFields = [\n    { name: 'Username', value: user.username, field: 'username' },\n    { name: 'Email', value: user.email, field: 'email' },\n  ];\n\n  const [modal, setModal] = React.useState(true);\n  const [info, setInfo] = React.useState(true);\n\n  return (\n    <Wrapper className=\"fill-screen\" backgroundImg={backgroundImg}>\n      <div\n        className=\"container settingPage generic-card\"\n        style={{\n          marginTop: '8%',\n          padding: '0px 3% 0.5% 3%',\n          fontSize: '1.10rem',\n          fontWeight: 200,\n          color: 'gray',\n        }}\n      >\n        <Grid cols=\"1\">\n          <div className=\"general-heading \" style={{ margin: '2%' }}>\n            Settings\n          </div>\n        </Grid>\n        {updatableFields.map((data, i) => (\n          <SettingItem\n            getUserInfo={getUserInfo}\n            userEmail={user.email}\n            {...data}\n            updatable={true}\n            key={i}\n          />\n        ))}\n        {notUpdatableFields.map((data, i) => (\n          <SettingItem\n            getUserInfo={getUserInfo}\n            {...data}\n            updatable={false}\n            key={i}\n          />\n        ))}\n\n        {/* Terms, Data Policy and Cookies Policy. */}\n        <div\n          className=\"yellow-button\"\n          style={{ margin: '3% auto' }}\n          onClick={() => {\n            logout();\n          }}\n        >\n          LOG OUT\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\nexport default Setting;\n"],"sourceRoot":""}