{"version":3,"sources":["components/classes/ClassStats.tsx"],"names":["ClassStats","_useState","useState","_useState2","Object","_mnt_c_Users_ashis_Financial_App_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","stats","setStats","authCode","useParams","useEffect","data","api","getClassStats","then","res","console","log","classDetails","i","length","x","options","scales","yAxes","ticks","beginAtZero","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","className","style","width","margin","minHeight","maxHeight","overflow","test","questions","map","question","key","marginTop","fontSize","react_chartjs_2__WEBPACK_IMPORTED_MODULE_2__","labels","answers","datasets","height"],"mappings":"mjCAwFeA,UA3EI,WAAM,IAAAC,EACGC,mBAAuB,IAD1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAChBK,EADgBH,EAAA,GACTI,EADSJ,EAAA,GAEjBK,EAAaC,cAAbD,SAENE,oBAAU,WAGR,IAAIC,EAAqB,GACzBC,IAAIC,cAAcL,GAAUM,KAAK,SAACC,GAChCC,QAAQC,IAAIF,GACZJ,EAAOI,EAAIG,aAEX,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAKS,OAAQD,IAAK,CACpC,IAAIE,EAAIV,EAAKQ,GACbE,EAAE,GAAF,gBAA0B,UAG1BA,EAAE,GAAF,gBAA0B,UAG5Bd,EAASI,MAEV,IAEH,IAAMW,EAAU,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,OA2BvB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OACEE,UAAU,eACVC,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,UAAW,OACXC,UAAW,OACXC,SAAU,SAGZV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BAAf,qBA/BGO,EAAKC,UAAUC,IAAI,SAACC,EAAUtB,GAAX,OACxBQ,EAAAC,EAAAC,cAAA,OACEa,IAAKvB,EACLa,MAAO,CACLE,OAAQ,OACRD,MAAO,MACPU,UAAW,OACXC,SAAU,WAGZjB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,aAAaU,GAC1Bd,EAAAC,EAAAC,cAACgB,EAAA,IAAD,CACElC,KAAM,CAAEmC,OAAQR,EAAKS,QAASC,SAAU1C,EAAMa,IAC9CG,QAASA,EACT2B,OAAQ","file":"static/js/10.954bb549.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api';\nimport test from '../../json/Tests.json';\n\ninterface statType {\n  label: String;\n  data: number[];\n  backgroundColor: String;\n}\n\n// Get demo bar graph from https://github.com/reactchartjs/react-chartjs-2/blob/master/example/src/charts/VerticalBar.js\nconst ClassStats = () => {\n  const [stats, setStats] = useState<statType[][]>([]);\n  let { authCode } = useParams<{ authCode: string }>();\n\n  useEffect(() => {\n    // Get data from backend\n\n    let data: statType[][] = [];\n    api.getClassStats(authCode).then((res) => {\n      console.log(res);\n      data = res.classDetails;\n\n      for (let i = 0; i < data.length; i++) {\n        let x = data[i];\n        x[0]['backgroundColor'] = '#227dbf';\n        // x[0]['data'] = [12, 19, 3, 5, 2];\n        // x[1]['data'] = [2, 3, 20, 5, 1];\n        x[1]['backgroundColor'] = '#fcb23d';\n      }\n\n      setStats(data);\n    });\n  }, []);\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  const chartsGenerator = () => {\n    return test.questions.map((question, i) => (\n      <div\n        key={i}\n        style={{\n          margin: 'auto',\n          width: '75%',\n          marginTop: '1.5%',\n          fontSize: '1.15em',\n        }}\n      >\n        <p className=\"ta-center\">{question}</p>\n        <Bar\n          data={{ labels: test.answers, datasets: stats[i] }}\n          options={options}\n          height={120}\n        />\n      </div>\n    ));\n  };\n  return (\n    <>\n      <div\n        className=\"generic-card\"\n        style={{\n          width: '80vw',\n          margin: 'auto',\n          minHeight: '80vh',\n          maxHeight: '90vh',\n          overflow: 'auto',\n        }}\n      >\n        <div className=\"ta-center general-heading\">Response Overview</div>\n        {chartsGenerator()}\n      </div>\n    </>\n  );\n};\n\nexport default ClassStats;\n"],"sourceRoot":""}