{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/booth/BoothSelect.tsx"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__","BoothIcons","1","clothingIcon","2","housingIcon","3","4","foodIcon","5","transportationIcon","6","temptationIcon","styled","div","_templateObject","BoothSelect","_ref","setSimStage","setCurrentBooth","setVisitedBooths","visitedBooths","boothsInfo","currentBalance","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_style_styled__WEBPACK_IMPORTED_MODULE_4__","cols","map","info","key","id","className","concat","includes","onClick","e","boothNo","_mnt_c_Users_ashis_Financial_App_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","src","category"],"mappings":"gHAGe,SAAAA,EAAAC,GACf,OCJe,SAAAA,GACf,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAG,EAAA,EAAAC,EAAA,IAAAH,MAAAD,EAAAK,QAAiDF,EAAAH,EAAAK,OAAgBF,IACjEC,EAAAD,GAAAH,EAAAG,GAGA,OAAAC,GDFSE,CAAiBN,IEJX,SAAAO,GACf,GAAAC,OAAAC,YAAAC,OAAAH,IAAA,uBAAAG,OAAAC,UAAAC,SAAAC,KAAAN,GAAA,OAAAN,MAAAa,KAAAP,GFGmCQ,CAAef,IGJnC,WACf,UAAAgB,UAAA,mDHG2DC,GAJ3DC,EAAAC,EAAAC,EAAA,sBAAArB,0bIeO,IAAMsB,EAAgC,CAC3CC,EAAGC,IACHC,EAAGC,IACHC,EAAGH,IACHI,EAAGC,IACHC,EAAGC,IACHC,EAAGC,KAGUC,IAAOC,IAAVC,KA2DGC,UA/CK,SAAAC,GAOI,IANtBC,EAMsBD,EANtBC,YACAC,EAKsBF,EALtBE,gBACAC,EAIsBH,EAJtBG,iBACAC,EAGsBJ,EAHtBI,cACAC,EAEsBL,EAFtBK,WAEsBL,EADtBM,eAeA,OAAKD,EAGDE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,KAAK,KACRN,EAAWO,IAAI,SAACC,EAAW/C,GAAZ,OACdyC,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,EAAKE,IACbR,EAAAC,EAAAC,cAAA,UACEO,UAAS,4BAAAC,OACPb,EAAcc,SAASpD,EAAI,GAAK,gBAAkB,IAEpDqD,QAAS,SAACC,GAnBtB,IAAmBC,EAoBAjB,EAAcc,SAASpD,EAAI,KAC9BqC,EAAgB,GAAAc,OAAA5C,OAAAiD,EAAA,EAAAjD,CAAK+B,GAAL,CAAoBtC,EAAI,KArBrCuD,EAsBOvD,EAAI,EArB5BmC,EAAY,kBACZC,EAAgBmB,MAwBNd,EAAAC,EAAAC,cAAA,OAAKc,IAAKvC,EAAWlB,EAAI,GAAIkD,UAAU,cACvCT,EAAAC,EAAAC,cAAA,KAAGO,UAAWH,EAAKE,IAAKF,EAAKW,eAlBjB","file":"static/js/5.a52fb9fe.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Grid, NavButton } from '../../style/styled';\nimport {\n  housingIcon,\n  clothingIcon,\n  foodIcon,\n  temptationIcon,\n  transportationIcon,\n} from 'assets';\nimport '../../style/simulation.css';\n\ninterface BoothIconsObjType {\n  [id: number]: any;\n}\nexport const BoothIcons: BoothIconsObjType = {\n  1: clothingIcon,\n  2: housingIcon,\n  3: clothingIcon,\n  4: foodIcon,\n  5: transportationIcon,\n  6: temptationIcon,\n};\n\nconst Option = styled.div`\n  background-color: #fcb23d;\n  color: #1f3d7d;\n  border: 2px solid #1f3d7d;\n  border-radius: 4px;\n  font-weight: bold;\n  font-family: Roboto;\n  font-size: 1.25em;\n  width: 17vw;\n  height: auto;\n  padding: 5%;\n`;\nconst BoothSelect = ({\n  setSimStage,\n  setCurrentBooth,\n  setVisitedBooths,\n  visitedBooths,\n  boothsInfo,\n  currentBalance,\n}: any): JSX.Element => {\n  // if (currentBalance <= 0) {\n  //   setSimStage('summary');\n  // }\n\n  function goToBooth(boothNo: number) {\n    setSimStage('Booth-Selected');\n    setCurrentBooth(boothNo);\n    // if (currentBalance > 0) {\n    //   setSimStage('Booth-Selected');\n    //   setCurrentBooth(boothNo);\n    // }\n  }\n\n  if (!boothsInfo) return null;\n  else\n    return (\n      <Grid cols=\"1\">\n        {boothsInfo.map((info: any, i: number) => (\n          <div key={info.id}>\n            <button\n              className={`customButton boothOption ${\n                visitedBooths.includes(i + 1) ? 'disabledBooth' : ''\n              }`}\n              onClick={(e) => {\n                if (!visitedBooths.includes(i + 1)) {\n                  setVisitedBooths([...visitedBooths, i + 1]);\n                  goToBooth(i + 1);\n                }\n              }}\n            >\n              <img src={BoothIcons[i + 1]} className=\"boothIcon\" />\n              <p className={info.id}>{info.category}</p>\n            </button>\n          </div>\n        ))}\n      </Grid>\n    );\n};\n\nexport default BoothSelect;\n"],"sourceRoot":""}