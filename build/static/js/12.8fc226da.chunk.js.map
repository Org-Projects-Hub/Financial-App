{"version":3,"sources":["style/preposttest.ts","components/tests/QuestionList.tsx","components/tests/QuestionCard.tsx","components/tests/TestLayout.tsx"],"names":["styled","div","_templateObject","NumberStr","_templateObject2","QuestionStr","_templateObject3","OptionButton","button","_templateObject4","NavButton","_templateObject5","QuestionListButton","_templateObject6","Line","hr","_templateObject7","Arrow","img","_templateObject8","QuestionListCard","_templateObject9","ListHeading","_templateObject10","QuestionList","props","_useState","useState","_useState2","Object","slicedToArray","toggleMenu","setToggleMenu","isMobile","react_default","a","createElement","onClick","className","preposttest","q","map","i","key","set","disabled","sel","value","current","src","Arrowsvg","alt","QuestionCard","width","num","total","cols","answer","e","save","target","id","TestLayout","window","innerWidth","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","row","col","colQList","colQCard","colStart","colEnd","style","minWidth","data","answered","rows","placing","align","tests_QuestionList","selections","questions","length","nav","tests_QuestionCard","answers","undefined","back","next"],"mappings":"yzGAIkBA,IAAOC,IAAVC,KAAf,IAKMC,EAAYH,IAAOC,IAAVG,KAYTC,EAAcL,IAAOC,IAAVK,KAQXC,EAAeP,IAAOQ,OAAVC,KAiCZC,EAAYV,IAAOQ,OAAVG,KAoCTC,EAAqBZ,IAAOQ,OAAVK,KA8BlBC,EAAOd,IAAOe,GAAVC,KAOJC,EAAQjB,IAAOkB,IAAVC,KAKLC,EAAmBpB,IAAOC,IAAVoB,KAShBC,EAActB,IAAOC,IAAVsB,mGC1FFC,EAtCM,SAACC,GAA8B,IAAAC,EACdC,oBAAS,GADKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3CK,EAD2CH,EAAA,GAC/BI,EAD+BJ,EAAA,GAGlD,OAAIH,EAAMQ,SAENC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAML,GAAeD,KAAtC,aAECA,EACCG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,sBAEA,MAKNF,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACG,EAAA,EAAD,kBACCd,EAAMe,EAAEC,IAAI,SAACD,EAAGE,GAAJ,OACXR,EAAAC,EAAAC,cAAA,OAAKO,IAAKD,GACRR,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEF,QAAS,kBAAMZ,EAAMmB,IAAIF,IACzBG,SAA0B,MAAhBpB,EAAMqB,IAAIJ,GACpBK,MAAQtB,EAAMqB,IAAIJ,GAAYjB,EAAMqB,IAAIJ,GAAGK,MAApB,MAEtBL,EAAI,EALP,KAK4B,MAAhBjB,EAAMqB,IAAIJ,GAAa,aAAe,WAC/CA,IAAMjB,EAAMuB,QAAUd,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOU,IAAKC,IAAUC,IAAI,KAAQ,MAE3DjB,EAAAC,EAAAC,cAACG,EAAA,EAAD,WCAGa,EAhCM,SAAC3B,GACpB,OACES,EAAAC,EAAAC,cAACpC,EAAA,EAAD,CAAMqD,MAAM,QACVnB,EAAAC,EAAAC,cAACG,EAAA,EAAD,4CACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACG,EAAA,EAAD,iBACYd,EAAM6B,IAAM,EADxB,OAC+B7B,EAAM8B,OAErCrB,EAAAC,EAAAC,cAACG,EAAA,EAAD,KAAcd,EAAMe,GAEpBN,EAAAC,EAAAC,cAACpC,EAAA,EAAD,CAAMwD,KAAK,KACTtB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBACXb,EAAMU,EAAEM,IAAI,SAACgB,EAAgBf,GAAjB,OACXR,EAAAC,EAAAC,cAAA,MAAIO,IAAKD,GACPR,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEF,QAAS,SAACqB,GACRjC,EAAMkC,KAAKlC,EAAM6B,IAAKI,EAAEE,OAAOC,KAEjCA,GAAInB,EACJK,MAAOU,EACPZ,SAAUpB,EAAMU,EAAEV,EAAMqB,OAASW,GAEhCA,UC4EFK,UAzGI,SAACrC,GAA8B,IAAAC,EACtBC,mBAASoC,OAAOC,YADMpC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACzC2B,EADyCzB,EAAA,GAClCqC,EADkCrC,EAAA,GAG1CsC,EAAyB,WAC7BD,EAASF,OAAOC,aAIlBG,oBAAU,WAGR,OAFAJ,OAAOK,iBAAiB,SAAUF,GAE3B,WACLH,OAAOM,oBAAoB,SAAUH,MAIzC,IAAMjC,EAAWoB,GAAS,IAGpBiB,GAAmB,IAAbrC,EAAqB,IAAM,IACnCsC,GAAmB,IAAbtC,EAAqB,IAAM,IACjCuC,EAEQ,IAFRA,EAGM,IAENC,EAAW,CAEbC,UAAuB,IAAbzC,EAAqB,IAAM,IACrC0C,QAAqB,IAAb1C,EAAqB,IAAM,KAGrC,OACEC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,OACEwC,MAAO,CAAEvB,MAAO,OAAQwB,SAAU,QAClCvC,UAAWb,EAAMqD,KAAKC,UAEtB7C,EAAAC,EAAAC,cAACpC,EAAA,EAAD,CAASgF,KAAMV,GACbpC,EAAAC,EAAAC,cAACpC,EAAA,EAAD,CAAMwD,KAAMe,EAAKU,QAAQ,WACvB/C,EAAAC,EAAAC,cAACpC,EAAA,EAAD,CACE0E,SAAUF,EACVG,OAAQH,EACRU,MAAM,UAENhD,EAAAC,EAAAC,cAAC+C,EAAD,CACElD,SAAUA,EACVa,IAAKrB,EAAMqD,KAAKM,WAChB7B,MAAO9B,EAAMqD,KAAKO,UAAUC,OAC5B1C,IAAKnB,EAAM8D,IAAI3C,IACfJ,EAAGf,EAAMqD,KAAKO,UACdrC,QAASvB,EAAMqD,KAAK9B,WAIxBd,EAAAC,EAAAC,cAACpC,EAAA,EAAD,CACE0E,SAAUD,EAASC,SACnBC,OAAQF,EAASE,OACjBO,MAAM,UAENhD,EAAAC,EAAAC,cAACoD,EAAD,CACElC,IAAK7B,EAAMqD,KAAK9B,QAChBR,EAAGf,EAAMqD,KAAKO,UAAU5D,EAAMqD,KAAK9B,SACnCb,EAAGV,EAAMqD,KAAKW,QACd3C,SACgD4C,IAA9CjE,EAAMqD,KAAKM,WAAW3D,EAAMqD,KAAK9B,SAC7B,KACAvB,EAAMqD,KAAKM,WAAW3D,EAAMqD,KAAK9B,SAEvCO,MAAO9B,EAAMqD,KAAKO,UAAUC,OAC5B3B,KAAMlC,EAAMkC,OAGdzB,EAAAC,EAAAC,cAACpC,EAAA,EAAD,CAAMwD,KAAK,KACTtB,EAAAC,EAAAC,cAACpC,EAAA,EAAD,CAAa0E,SAAS,IAAIC,OAAO,IAAIO,MAAM,QACzChD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEM,SAAUpB,EAAMqD,KAAK9B,SAAW,EAChCX,QAAS,kBAAMZ,EAAM8D,IAAII,SAF3B,SAOFzD,EAAAC,EAAAC,cAACpC,EAAA,EAAD,CAAa0E,SAAS,IAAIC,OAAO,IAAIO,MAAM,SACzChD,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEM,SAAuD,MAA7CpB,EAAMqD,KAAKM,WAAW3D,EAAMqD,KAAK9B,SAC3CX,QAAS,kBACPZ,EAAM8D,IAAIK,KACRnE,EAAMqD,KAAK9B,SAAWvB,EAAMqD,KAAKO,UAAUC,OAAS,KAIvD7D,EAAMqD,KAAK9B,SAAWvB,EAAMqD,KAAKO,UAAUC,OAAS,EACjD,OACA","file":"static/js/12.8fc226da.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\nimport { Card } from './styled';\n\nconst Container = styled.div`\n  min-width: 50%;\n  max-width: 50%;\n`;\n\nconst NumberStr = styled.div`\n  color: #8c8c8c;\n  margin: 2.5% 0;\n  text-align: center;\n  font-size: 12px;\n  font-weight: bold;\n\n  &:hover {\n    cursor: default;\n  }\n`;\n\nconst QuestionStr = styled.div`\n  color: #005191;\n  padding-bottom: 15px;\n  text-align: center;\n  font-size: 1.35em;\n  font-weight: bold;\n`;\n\nconst OptionButton = styled.button`\n  background-color: #539ed0;\n  color: white;\n  margin: 5px;\n  min-width: 200px;\n  min-height: 30px;\n  border: none;\n  border-radius: 4px;\n\n  &:focus {\n    background-color: white;\n  }\n\n  &:hover {\n    cursor: pointer;\n    color: #f8b332;\n    box-shadow: 4px 4px 2px #b5b5b5;\n    font-size: 104%;\n  }\n\n  &:disabled {\n    color: #005191;\n    background-color: #ffb93e;\n\n    box-shadow: 2px 2px 4px #adadad;\n    font-weight: normal;\n    &:hover {\n      cursor: default;\n      box-shadow: 4px 4px 2px #b5b5b5;\n    }\n  }\n`;\n\nconst NavButton = styled.button`\n  background-color: #fcb23d;\n  color: white;\n  margin: 5px;\n  min-width: 100px;\n  min-height: 40px;\n  border: none;\n\n  border-radius: 5px;\n  font-weight: 600;\n  font-size: 1.15em;\n\n  margin-top: 1vh;\n\n  // &:focus {\n  //   background-color: #7da2d6;\n  // }\n\n  &:hover {\n    cursor: pointer;\n    font-size: 118%;\n    font-weight: 700;\n  }\n\n  &:disabled {\n    background-color: rgb(255 255 255 / 0.9);\n    color: #005191;\n    border-color: #7da2d6;\n    cursor: not-allowed;\n    font-weight: normal;\n    &:hover {\n      font-size: 90%;\n    }\n  }\n`;\n\nconst QuestionListButton = styled.button`\n  color: #005191;\n  margin: 5px;\n  border: 0px;\n  min-height: 30px;\n  min-width: 175px;\n  text-align: left;\n  padding-left: 10%;\n  background-color: inherit;\n\n  &:focus {\n    background-color: inherit;\n  }\n\n  &:hover {\n    cursor: pointer;\n    font-size: 104%;\n    color: #005191;\n    font-weight: bold;\n  }\n\n  &:disabled {\n    font-weight: normal;\n    &:hover {\n      cursor: default;\n      font-size: 100%;\n    }\n  }\n`;\n\nconst Line = styled.hr`\n  background-color: #539ED0;\n  height: 1px;\n  border: none;\n}\n`;\n\nconst Arrow = styled.img`\n  margin-left: 2em;\n  width: 1em;\n`;\n\nconst QuestionListCard = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  background: rgb(255 255 255 / 0.9);\n  box-shadow: 0 0.25em 0.5em rgba(0, 0, 0, 0.5);\n  border-radius: 0.5em;\n`;\n\nconst ListHeading = styled.div`\n  padding: 6px 0;\n  color: #005191;\n  font-size: 1.75em;\n  font-weight: bold;\n  text-align: center;\n  font-family: 'Roboto Condensed', sans-serif;\n`;\n\nexport {\n  OptionButton,\n  NumberStr,\n  QuestionStr,\n  NavButton,\n  Container,\n  QuestionListButton,\n  QuestionListCard,\n  ListHeading,\n  Line,\n  Arrow,\n};\n","import React, { useState } from 'react';\nimport {\n  QuestionListButton,\n  QuestionListCard,\n  ListHeading,\n  Line,\n  Arrow,\n} from '../../style/preposttest';\nimport { Arrowsvg } from 'assets';\n\ninterface Props {\n  isMobile: boolean;\n  sel: { id: number; value: string }[];\n  total: number;\n  set: Function;\n  q: string[];\n  current: any;\n}\n\n//desktop- needs to be clear which question is currently being viewed\n\nconst QuestionList = (props: Props): JSX.Element => {\n  const [toggleMenu, setToggleMenu] = useState(false);\n\n  if (props.isMobile) {\n    return (\n      <div>\n        <button onClick={() => setToggleMenu(!toggleMenu)}>show menu</button>\n\n        {toggleMenu ? (\n          <div className=\"menu\">\n            <button>one</button>\n            <button>two</button>\n          </div>\n        ) : null}\n      </div>\n    );\n  } else {\n    return (\n      <QuestionListCard>\n        <ListHeading>QUESTIONS</ListHeading>\n        {props.q.map((q, i) => (\n          <div key={i}>\n            <QuestionListButton\n              onClick={() => props.set(i)}\n              disabled={props.sel[i] == null}\n              value={!props.sel[i] ? null : props.sel[i].value}\n            >\n              {i + 1}. {props.sel[i] == null ? 'Unanswered' : 'Answered'}\n              {i === props.current ? <Arrow src={Arrowsvg} alt=\"\" /> : null}\n            </QuestionListButton>\n            <Line />\n          </div>\n        ))}\n      </QuestionListCard>\n    );\n  }\n};\n\nexport default QuestionList;\n","import React from 'react';\nimport {\n  NumberStr,\n  QuestionStr,\n  OptionButton,\n  ListHeading,\n  Line,\n} from '../../style/preposttest';\nimport { Card, Grid } from '../../style/styled';\n\ninterface Props {\n  num: number;\n  q: string;\n  a: string[];\n  sel: number;\n  total: number;\n  save: Function;\n}\n\nconst QuestionCard = (props: Props): JSX.Element => {\n  return (\n    <Card width=\"50vw\">\n      <ListHeading>HOW WELL DO YOU KNOW YOUR FINANCES?</ListHeading>\n      <Line />\n      <NumberStr>\n        Question {props.num + 1} of {props.total}\n      </NumberStr>\n      <QuestionStr>{props.q}</QuestionStr>\n\n      <Grid cols=\"1\">\n        <ul className=\"answer-options\">\n          {props.a.map((answer: string, i: any) => (\n            <li key={i}>\n              <OptionButton\n                onClick={(e: any) => {\n                  props.save(props.num, e.target.id);\n                }}\n                id={i}\n                value={answer}\n                disabled={props.a[props.sel] === answer}\n              >\n                {answer}\n              </OptionButton>\n            </li>\n          ))}\n        </ul>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default QuestionCard;\n","import React, { useEffect, useState } from 'react';\nimport { Grid, GridRow, GridColItem } from 'style/styled';\nimport { NavButton } from 'style/preposttest';\nimport QuestionList from './QuestionList';\nimport QuestionCard from './QuestionCard';\n\ninterface Props {\n  nav: any;\n  save: Function;\n  data: any;\n}\n\nconst TestLayout = (props: Props): JSX.Element => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  const handleWindowSizeChange = () => {\n    setWidth(window.innerWidth);\n  };\n\n  //window size change\n  useEffect(function () {\n    window.addEventListener('resize', handleWindowSizeChange);\n\n    return function cleanup() {\n      window.removeEventListener('resize', handleWindowSizeChange);\n    };\n  });\n\n  const isMobile = width <= 500 ? true : false;\n\n  //layout format\n  const row = isMobile === false ? '1' : '2';\n  let col = isMobile === false ? '1' : '0';\n  let colQList = {\n    // questionlist\n    colStart: '0',\n    colEnd: '1',\n  };\n  let colQCard = {\n    // question card\n    colStart: isMobile === false ? '1' : '0',\n    colEnd: isMobile === false ? '2' : '1',\n  };\n\n  return (\n    <div className=\"flex-center\">\n      <div\n        style={{ width: '100%', minWidth: '100%' }}\n        className={props.data.answered}\n      >\n        <GridRow rows={row}>\n          <Grid cols={col} placing=\"initial\">\n            <GridColItem\n              colStart={colQList.colStart}\n              colEnd={colQList.colEnd}\n              align=\"center\"\n            >\n              <QuestionList\n                isMobile={isMobile}\n                sel={props.data.selections}\n                total={props.data.questions.length}\n                set={props.nav.set}\n                q={props.data.questions}\n                current={props.data.current}\n              />\n            </GridColItem>\n\n            <GridColItem\n              colStart={colQCard.colStart}\n              colEnd={colQCard.colEnd}\n              align=\"center\"\n            >\n              <QuestionCard\n                num={props.data.current}\n                q={props.data.questions[props.data.current]}\n                a={props.data.answers}\n                sel={\n                  props.data.selections[props.data.current] === undefined\n                    ? null\n                    : props.data.selections[props.data.current]\n                }\n                total={props.data.questions.length}\n                save={props.save}\n              />\n\n              <Grid cols=\"1\">\n                <GridColItem colStart=\"0\" colEnd=\"1\" align=\"left\">\n                  <NavButton\n                    disabled={props.data.current <= 0}\n                    onClick={() => props.nav.back()}\n                  >\n                    Back\n                  </NavButton>\n                </GridColItem>\n                <GridColItem colStart=\"2\" colEnd=\"3\" align=\"right\">\n                  <NavButton\n                    disabled={props.data.selections[props.data.current] == null}\n                    onClick={() =>\n                      props.nav.next(\n                        props.data.current == props.data.questions.length - 1\n                      )\n                    }\n                  >\n                    {props.data.current != props.data.questions.length - 1\n                      ? 'Next'\n                      : 'Finish'}\n                  </NavButton>\n                </GridColItem>\n              </Grid>\n            </GridColItem>\n          </Grid>\n        </GridRow>\n      </div>\n    </div>\n  );\n};\n\nexport default TestLayout;\n"],"sourceRoot":""}