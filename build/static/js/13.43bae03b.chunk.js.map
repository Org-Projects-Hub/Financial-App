{"version":3,"sources":["utils/useStateCallback.ts","pages/Simulation.tsx"],"names":["useStateCallback","initialState","_useState","useState","_useState2","Object","_mnt_c_Users_ashis_Financial_App_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","state","_setState","callbackRef","useRef","isFirstCallbackCall","setState","useCallback","setStateAction","callback","current","useEffect","Simulation","_ref","user","_useStateCallback","_useStateCallback2","stage","setStage","loading","setLoading","_useState3","balance","income","rent","food","transport","_useState4","evaluationVals","setEvaluationVals","api","createOrRetriveSimulation","then","res","inProgress","catch","err","console","log","updateSimulation","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_style_styled__WEBPACK_IMPORTED_MODULE_3__","className","_components__WEBPACK_IMPORTED_MODULE_2__","vals"],"mappings":"8GAsCeA,IA3Bf,SACEC,GAC8C,IAAAC,EACnBC,mBAASF,GADUG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvCK,EADuCH,EAAA,GAChCI,EADgCJ,EAAA,GAGxCK,EAAcC,mBACdC,EAAsBD,kBAAgB,GAEtCE,EAAWC,sBACf,SAACC,EAAmCC,GAClCN,EAAYO,QAAUD,EACtBP,EAAUM,IAEZ,IAWF,OARAG,oBAAU,WACJN,EAAoBK,QACtBL,EAAoBK,SAAU,EAG5BP,EAAYO,SAASP,EAAYO,QAAQT,IAC5C,CAACA,IAEG,CAACA,EAAOK,0GCwBFM,UAnDI,SAAAC,GAA0CA,EAAvCC,KAAuC,IAAAC,EACjCrB,YAAoC,MADHsB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GACpDE,EADoDD,EAAA,GAC7CE,EAD6CF,EAAA,GAAApB,EAE7BC,oBAAkB,GAFWC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEpDuB,EAFoDrB,EAAA,GAE3CsB,EAF2CtB,EAAA,GAAAuB,EAGfxB,mBAA6B,CACvEyB,QAAS,EACTC,OAAQ,EACRC,KAAM,EACNC,KAAM,EACNC,UAAW,IAR8CC,EAAA5B,OAAAC,EAAA,EAAAD,CAAAsB,EAAA,GAGpDO,EAHoDD,EAAA,GAGpCE,EAHoCF,EAAA,GA8B3D,OAnBAhB,oBAAU,WACRmB,IACGC,4BACAC,KAAK,SAACC,GACLf,EAASe,EAAIC,WAAY,kBAAMd,GAAW,OAE3Ce,MAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC7B,IAEHzB,oBAAU,WACHQ,GACHW,IACGS,iBAAiBtB,GACjBkB,MAAM,SAACC,GAAD,OACLC,QAAQC,IAAI,0DAGjB,CAACrB,IAGFuB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,UAAU,UACN,YAAV3B,GACCuB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAgB5B,MAAOA,EAAOC,SAAUA,IAE/B,eAAVD,GACCuB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACE3B,SAAUA,EACVW,kBAAmBA,IAGZ,eAAVZ,GACCuB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYC,KAAMlB,EAAgBV,SAAUA,IAEnC,aAAVD,GACCuB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAgB5B,MAAOA,EAAOC,SAAUA","file":"static/js/13.43bae03b.chunk.js","sourcesContent":["import React, {\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\ntype Callback<T> = (value?: T) => void;\ntype DispatchWithCallback<T> = (value: T, callback?: Callback<T>) => void;\n\nfunction useStateCallback<T>(\n  initialState: T | (() => T)\n): [T, DispatchWithCallback<SetStateAction<T>>] {\n  const [state, _setState] = useState(initialState);\n\n  const callbackRef = useRef<Callback<T>>();\n  const isFirstCallbackCall = useRef<boolean>(true);\n\n  const setState = useCallback(\n    (setStateAction: SetStateAction<T>, callback?: Callback<T>): void => {\n      callbackRef.current = callback;\n      _setState(setStateAction);\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (isFirstCallbackCall.current) {\n      isFirstCallbackCall.current = false;\n      return;\n    }\n    if (callbackRef.current) callbackRef.current(state);\n  }, [state]);\n\n  return [state, setState];\n}\n\nexport default useStateCallback;\n","import React, { useEffect, useState } from 'react';\nimport { TestController, RunSimulation, Evaluation } from '../components';\nimport { evaluationValsType, simulation_stages } from 'types/shared';\nimport { Wrapper } from '../style/styled';\nimport api from '../api';\nimport useStateCallback from '../utils/useStateCallback';\n\n//Sets the\nconst Simulation = ({ user }: { user: any }): JSX.Element => {\n  const [stage, setStage] = useStateCallback<simulation_stages>(null);\n  const [loading, setLoading] = useState<Boolean>(true);\n  const [evaluationVals, setEvaluationVals] = useState<evaluationValsType>({\n    balance: 0,\n    income: 0,\n    rent: 0,\n    food: 0,\n    transport: 0,\n  });\n\n  useEffect(() => {\n    api\n      .createOrRetriveSimulation()\n      .then((res) => {\n        setStage(res.inProgress, () => setLoading(false));\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    if (!loading) {\n      api\n        .updateSimulation(stage)\n        .catch((err) =>\n          console.log('Something went wrong on our end! Please try again. ')\n        );\n    }\n  }, [stage]);\n\n  return (\n    <Wrapper className=\"center\">\n      {stage === 'pretest' && (\n        <TestController stage={stage} setStage={setStage} />\n      )}\n      {stage === 'simulation' && (\n        <RunSimulation\n          setStage={setStage}\n          setEvaluationVals={setEvaluationVals}\n        />\n      )}\n      {stage === 'evaluation' && (\n        <Evaluation vals={evaluationVals} setStage={setStage} />\n      )}\n      {stage === 'posttest' && (\n        <TestController stage={stage} setStage={setStage} />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Simulation;\n"],"sourceRoot":""}